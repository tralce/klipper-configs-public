[gcode_macro M600]
gcode:
    PAUSE
    QUICK_UNLOAD
    BEEP COUNT=5 DURATION=100

[gcode_macro QUICK_LOAD]
gcode:
    BEEP DURATION=75
    M83
    G1 E50 F200

[gcode_macro QUICK_UNLOAD]
gcode:
    BEEP DURATION=75
    M83
    G1 E-50 F200

[gcode_macro LOAD_AND_RESUME_IF_PAUSED]
description: Load filament and resume (if paused)
gcode:
    QUICK_LOAD
    {% if printer.pause_resume.is_paused %}
        BEEP DURATION=50 COUNT=3
        G4 P7500
        RESUME
    {% endif %}

[gcode_macro BEEP]
gcode:
    {% set duration = params.DURATION|default(500)|int %}
    {% set count = params.COUNT|default(1)|int %}
    {% for i in range(count) %}
    SET_PIN PIN=beeper VALUE=1
    G4 P{duration}
    SET_PIN PIN=beeper VALUE=0
    G4 P{duration}  # Wait for the duration again after the beep
    {% endfor %}
  
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    BEEP
    PAUSE_BASE
    G91
    #{% if printer.extruder.can_extrude|lower == 'true' %}
    #    G1 E-{E} F2100
    #{% else %}
    #    {action_respond_info("Extruder not hot enough")}
    #{% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
        G1 Z{z_safe} F900
        G90
        G1 X{x_park} Y{y_park} F6000
    {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    #{% if printer.extruder.can_extrude|lower == 'true' %}
    #    G91
    #    G1 E{E} F2100
    #{% else %}
    #    {action_respond_info("Extruder not hot enough")}
    #{% endif %}  
    BEEP
    RESUME_BASE {get_params}

[gcode_macro M420]
description: Load the current mesh
gcode:
    BED_MESH_PROFILE LOAD=default
  
[gcode_macro G29]
description: creates automated homing and bed mesh
gcode:
    G28
    BED_MESH_CALIBRATE
    DATA_SAVE

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}